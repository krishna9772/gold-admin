{"version":3,"file":"/js/media/media.min.js","mappings":"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","sources":["webpack:///./resources/js/media/media.js"],"sourcesContent":["let baseUrl = document.querySelector('meta[name=\"base-url\"]').getAttribute('content');\n\nconst exampleModal = document.getElementById('exampleModal');\nconst mediaContainer = document.getElementById('media-container');\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    let selectedMediaUrl = '';\n    let currentImageContainer = '';\n    let currentHiddenInput = '';\n    let videoInputCounter = 0; // Initialize a counter for dynamic IDs\n\n    function initializeImageSelection(button) {\n        button.addEventListener('click', function() {\n            currentImageContainer = this.getAttribute('data-image-container');\n            currentHiddenInput = this.getAttribute('data-hidden-input');\n        });\n    }\n\n    function initializeModal() {\n        document.querySelectorAll('button[data-bs-target=\"#exampleModal\"]').forEach(function(button) {\n            initializeImageSelection(button);\n        });\n    }\n\n    function selectMedia(mediaUrl, mediaElement) {\n        selectedMediaUrl = mediaUrl;\n\n        // Remove active class from all media elements\n        document.querySelectorAll('#mediaLibraryContent img, #mediaLibraryContent video').forEach(function(media) {\n            media.classList.remove('iq-image');\n        });\n\n        // Add active class to the selected media element\n        mediaElement.classList.add('iq-image');\n    }\n\n    if (document.getElementById('mediaLibraryContent')) {\n        document.getElementById('mediaLibraryContent').addEventListener('click', function(event) {\n\n            if (event.target.tagName === 'IMG') {\n                var mediaUrl = event.target.src;\n                selectMedia(mediaUrl, event.target);\n            } else if (event.target.tagName === 'VIDEO') {\n\n             var mediaUrl = event.target.querySelector('source').src;\n             //   var mediaUrl = event.target.src;\n                if (mediaUrl) {\n\n                    selectMedia(mediaUrl, event.target);\n                }\n                event.preventDefault();\n            }\n        });\n    }\n\n    if (document.getElementById('mediaSubmitButton')) {\n      document.getElementById('mediaSubmitButton').addEventListener('click', function() {\n          if (selectedMediaUrl && currentImageContainer && currentHiddenInput) {\n              var selectedImageContainer = document.getElementById(currentImageContainer);\n              var mediaUrlInput = document.getElementById(currentHiddenInput);\n\n              if (selectedImageContainer) {\n                  mediaUrlInput.value = selectedMediaUrl;\n\n                  selectedImageContainer.innerHTML = '';\n\n                  // Check if there's an element with id iq-video-quality\n\n                  if (mediaUrlInput.hasAttribute('data-validation')) {\n                    var fileError = document.getElementById('file-error');\n                    var videofile = document.querySelector('input[name=\"video_file_input\"]');\n                    var vfi = document.querySelector('input[name=\"image_input4\"]');\n                      // Only allow video selection\n                      if (selectedMediaUrl.endsWith('.mp4') || selectedMediaUrl.endsWith('.avi')) {\n                        if(fileError){\n                            fileError.style.display = 'none';\n                        }\n                        if(videofile){\n                        videofile.removeAttribute('required');\n                        }\n                          var video = document.createElement('video');\n                          video.src = selectedMediaUrl;\n                          video.controls = true;\n                          video.classList.add('img-fluid', 'mb-2');\n                          video.style.maxWidth = '300px';\n                          video.style.maxHeight = '300px';\n\n                          selectedImageContainer.appendChild(video);\n\n                          var crossIcon = document.createElement('span');\n                          crossIcon.innerHTML = '&times;';\n                          crossIcon.classList.add('remove-media-icon');\n                          crossIcon.style.cursor = 'pointer';\n                          crossIcon.style.fontSize = '24px';\n                          crossIcon.style.position = 'absolute';\n\n                          crossIcon.addEventListener('click', function() {\n                              selectedImageContainer.innerHTML = '';\n                              mediaUrlInput.value = '';\n                              if(videofile){\n                              videofile.value='';\n                              }\n                              if(vfi){\n                                vfi.setAttribute('required','required');\n                              }\n\n                              if(fileError){\n                                fileError.style.display = 'block';\n                            }\n                          });\n                          if(vfi){\n                            vfi.removeAttribute('required');\n                          }\n                          selectedImageContainer.appendChild(crossIcon);\n                      } else {\n                        if(videofile){\n                        videofile.setAttribute('required', 'required');\n                        }\n                        if(fileError){\n                            fileError.style.display = 'block';\n                        }\n\n                          // Show error for incorrect media type\n                          var errorElement = document.createElement('div');\n                          errorElement.classList.add('text-danger');\n                          errorElement.textContent = 'Only video files are allowed.';\n                          selectedImageContainer.appendChild(errorElement);\n                      }\n                  } else {\n\n                    if(selectedMediaUrl.endsWith('.png') || selectedMediaUrl.endsWith('.jpg') || selectedMediaUrl.endsWith('.jpeg') || selectedMediaUrl.endsWith('.webp')){\n                      // For other cases, default behavior (assuming image upload or other media)\n                      var img = document.createElement('img');\n                      img.src = selectedMediaUrl;\n                      img.classList.add('img-fluid', 'mb-2');\n                      img.style.maxWidth = '100px';\n                      img.style.maxHeight = '100px';\n\n                      selectedImageContainer.appendChild(img);\n\n                      var crossIcon = document.createElement('span');\n                      crossIcon.innerHTML = '&times;';\n                      crossIcon.classList.add('remove-media-icon');\n                      crossIcon.style.cursor = 'pointer';\n                      crossIcon.style.fontSize = '24px';\n                      crossIcon.addEventListener('click', function() {\n                          selectedImageContainer.innerHTML = '';\n                          mediaUrlInput.value = '';\n                      });\n\n                      selectedImageContainer.appendChild(crossIcon);\n                    } else {\n                          var errorElement = document.createElement('div');\n                          errorElement.classList.add('text-danger');\n                          errorElement.textContent = 'Only image files are allowed.';\n                          selectedImageContainer.appendChild(errorElement);\n\n                          var buttonElements = document.querySelectorAll('.input-group-text.form-control');\n                          buttonElements.forEach(function(buttonElement) {\n                              if (buttonElement) {\n                                  buttonElement.innerHTML = '';\n                              }\n                          });\n                       }\n                   }\n\n                  $('#exampleModal').modal('hide');\n              }\n          }\n      });\n  }\n\n  if (document.getElementById('submitButton')) {\n\n    const submitButton = document.getElementById('submitButton');\n\n    document.getElementById('submitButton').addEventListener('click', function(event) {\n        const mediaContainerdata = document.getElementById('media-container');\n\n        event.preventDefault(); // Prevent the default form submission\n\n        submitButton.disabled = true;\n        window.uploadedFiles = window.uploadedFiles || [];\n        var formData = new FormData();\n        var remainingFiles = window.uploadedFiles.filter(file => !file.removed);\n\n        if (remainingFiles.length > 0) {\n            document.getElementById('file_url_media').removeAttribute('required');\n            document.getElementById('file_url_media-error').style.display = 'none';\n            for (var i = 0; i < remainingFiles.length; i++) {\n                formData.append('file_url[]', remainingFiles[i].file);\n            }\n\n            // Submit the form with remaining files\n            var xhr = new XMLHttpRequest();\n            xhr.open('POST', `${baseUrl}/app/media-library/store`, true);\n            xhr.setRequestHeader('X-CSRF-TOKEN', document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content')); // Set CSRF token header\n            xhr.onloadstart = function() {\n                submitButton.innerText = 'Loading...';\n\n            };\n\n            xhr.onload = function() {\n                if (xhr.status === 200) {\n                    window.uploadedFiles = [];\n                    // Trigger the media library tab to refresh\n                    document.getElementById('nav-media-library-tab').click();\n\n                    const mediaContainer = document.getElementById('media-container');\n                    page = 1; // Reset the page to 1\n                    mediaContainer.innerHTML = ''; // Clear the container to load fresh content\n\n                    submitButton.disabled = false;\n\n                    loadPaginatedImages(); // Call the pagination function\n\n                    // Add the scroll event listener after the initial load\n                    mediaLibraryContent.addEventListener('scroll', handleScroll);\n                }\n            };\n\n            xhr.onloadend = function() {\n                submitButton.innerText = 'Save';\n            };\n\n            submitButton.disabled = false;\n\n            xhr.send(formData);\n        }else{\n            document.getElementById('file_url_media').setAttribute('required', 'required');\n            document.getElementById('file_url_media-error').style.display = 'block';\n\n            submitButton.innerText = 'Save';\n        }\n\n        submitButton.disabled = false;\n\n        if (window.location.href === `${baseUrl}/app/media-library`) {\n            window.location.reload();\n        }\n    });\n}\n\nfunction loadPaginatedImages() {\n\n    const mediaContainer = document.getElementById('media-container');\n    const loadingSpinner = document.getElementById('loading-spinner');\n    const mediaLibraryContent = document.getElementById('mediaLibraryContent');\n    const perPage = 21; // Number of images per page (adjust as needed)\n\n    let isLoading = false;\n    let hasMore = true;\n    if (isLoading || !hasMore) return; // Prevent duplicate loads\n\n    isLoading = true; // Set loading to true\n    fetch(`${baseUrl}/app/media-library/getMediaStore?page=${page}&perPage=${perPage}`)\n        .then(response => response.json())\n        .then(data => {\n            if (data.html) {\n                if (page === 1) {\n                    mediaContainer.innerHTML = ''; // Clear existing content only on the first page load\n                }\n\n                mediaContainer.insertAdjacentHTML('beforeend', data.html);\n\n                if (data.hasMore) {\n                    page++; // Increment page number if more images are available\n                } else {\n                    hasMore = false; // Set hasMore to false if no more images\n                }\n            } else {\n                console.log(\"No data received\");\n            }\n        })\n        .catch(error => console.error('Error:', error))\n        .finally(() => {\n            isLoading = false; // Reset loading status after the fetch completes\n        });\n}\n\n// Scroll event handler to trigger loading more images\nfunction handleScroll() {\n\n    // Check if the user has scrolled to the bottom of the mediaLibraryContent container\n    if (mediaLibraryContent.scrollTop + mediaLibraryContent.clientHeight >= mediaLibraryContent.scrollHeight - 100) {\n        loadPaginatedImages(); // Load more images when the user scrolls to the bottom\n    }\n}\n\nif(exampleModal){\nexampleModal.addEventListener('hidden.bs.modal', function () {\n    mediaLibraryContent.removeEventListener('scroll', handleScroll);\n});\n}\n\nfunction handleVideoQualityTypeChange(section) {\n    section.find('.video_quality_type').on('change', function() {\n        var selectedType = $(this).val();\n        var QualityVideoFileInput = section.find('.quality_video_file_input');\n        var QualityVideoURLInput = section.find('.quality_video_input');\n        var qualityVideoInput = section.find('input[name=\"quality_video[]\"]');\n        var qualityVideoURLInput = section.find('input[name=\"quality_video_url_input[]\"]');\n        if (selectedType === 'Local') {\n            QualityVideoFileInput.removeClass('d-none');\n            QualityVideoURLInput.addClass('d-none');\n            qualityVideoInput.val(qualityVideoInput.val()).trigger('change');\n            qualityVideoURLInput.val('').trigger('change');\n        } else {\n            QualityVideoFileInput.addClass('d-none');\n            QualityVideoURLInput.removeClass('d-none');\n            qualityVideoURLInput.val(qualityVideoURLInput.val()).trigger('change');\n            qualityVideoInput.val('').trigger('change');\n        }\n    }).trigger('change');\n}\n    function destroySelect2(section) {\n        section.find('select.select2').each(function() {\n            if ($(this).data('select2')) {\n                $(this).select2('destroy');\n            }\n        });\n    }\n\n    function initializeSelect2(section) {\n        section.find('select.select2').each(function() {\n            $(this).select2({\n                width: '100%'\n            });\n        });\n    }\n    function initializeFormState() {\n        // Handle the initial visibility of input fields based on current values\n        $('.video-inputs-container').each(function() {\n            handleVideoQualityTypeChange($(this));\n        });\n    }\n    $('#add_more_video').click(function() {\n        var originalSection = $('.video-inputs-container').first();\n        destroySelect2(originalSection);\n\n        var newSection = originalSection.clone();\n        videoInputCounter++; // Increment the counter\n\n        newSection.find('input, select').each(function() {\n            var idAttr = $(this).attr('id');\n            if (idAttr) {\n                $(this).attr('id', idAttr + videoInputCounter);\n            }\n\n            var nameAttr = $(this).attr('name');\n            if (nameAttr) {\n                $(this).attr('name', nameAttr + videoInputCounter);\n            }\n\n            $(this).val('').trigger('change');\n        });\n\n        newSection.find('.remove-video-input').removeClass('d-none');\n\n        newSection.find('[data-image-container]').each(function() {\n            var dataAttr = $(this).attr('data-image-container');\n            $(this).attr('data-image-container', dataAttr + videoInputCounter);\n        });\n\n        newSection.find('[data-hidden-input]').each(function() {\n            var dataAttr = $(this).attr('data-hidden-input');\n            $(this).attr('data-hidden-input', dataAttr + videoInputCounter);\n        });\n\n        newSection.find('.img-fluid').remove();\n        newSection.find('.remove-media-icon').remove();\n        newSection.find('input[type=\"hidden\"]').val('');\n\n        newSection.find('div[id]').each(function() {\n            var idAttr = $(this).attr('id');\n            if (idAttr) {\n                $(this).attr('id', idAttr + videoInputCounter);\n            }\n        });\n\n        $('#video-inputs-container-parent').append(newSection);\n\n        initializeSelect2(newSection);\n        handleVideoQualityTypeChange(newSection);\n        initializeModal();\n        initializeSelect2(originalSection);\n    });\n\n    $(document).on('click', '.remove-video-input', function() {\n        $(this).closest('.video-inputs-container').remove();\n    });\n    initializeFormState();\n    initializeModal();\n    initializeSelect2($(document));\n});\n\n\n\n\n  if(document.getElementById('file_url_media')){\n    document.getElementById('file_url_media').addEventListener('change', function() {\n        var fileInput = document.getElementById('file_url_media');\n        var uploadedImagesContainer = document.getElementById('uploadedImages');\n        var chunkSize = 1024 * 1024 * 30; // 100 MB chunk size (adjust as necessary)\n        var uploadedFiles = [];\n\n        // Clear previously uploaded images and reset progress\n        uploadedImagesContainer.innerHTML = '';\n\n        if (fileInput.files.length > 0) {\n            for (var i = 0; i < fileInput.files.length; i++) {\n                var file = fileInput.files[i];\n                var start = 0;\n                var end = Math.min(chunkSize, file.size);\n                var index = 0;\n\n                if (file.type.startsWith('video/')) {\n                    var video = document.createElement('video');\n                    video.src = URL.createObjectURL(file);\n                    video.currentTime = 1; // Capture frame at 1 second\n\n                    video.addEventListener('loadeddata', function() {\n                        var canvas = document.createElement('canvas');\n                        canvas.width = video.videoWidth;\n                        canvas.height = video.videoHeight;\n                        var ctx = canvas.getContext('2d');\n                        ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n                        var img = document.createElement('img');\n                        img.src = canvas.toDataURL('image/jpeg');\n                        img.classList.add('img-fluid', 'iq-uploaded-image');\n                        img.style.width = '150px'; // Adjust size as needed\n                        img.style.height = '100px';\n\n                        // Create progress bar\n                        var progressBar = document.createElement('div');\n                        progressBar.classList.add('progress', 'mb-3', 'iq-progress');\n                        progressBar.style.visibility = 'hidden'; // Change visibility to hidden initially\n                        progressBar.innerHTML = `\n                            <div class=\"progress-bar\" role=\"progressbar\" style=\"width: 0%;\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                        `;\n\n                        // Create close icon\n                        var closeButton = document.createElement('div');\n                        closeButton.classList.add('iq-uploaded-image-close');\n                        closeButton.innerHTML = '&times;';\n                        closeButton.addEventListener('click', function() {\n                            uploadedFiles[index].removed = true; // Mark file as removed\n                            this.parentNode.remove(); // Remove image on close icon click\n                            checkAndClearFileInput();\n                        });\n\n                        // Append image, progress bar, and close icon\n                        var imageContainer = document.createElement('div');\n                        imageContainer.classList.add('iq-uploaded-image-container');\n                        imageContainer.appendChild(img);\n                        imageContainer.appendChild(progressBar);\n                        imageContainer.appendChild(closeButton);\n                        uploadedImagesContainer.appendChild(imageContainer);\n\n                        // Track the uploaded file\n                        uploadedFiles.push({ file: file, removed: false, progressBar: progressBar.querySelector('.progress-bar') });\n\n                        uploadChunk(file, index, start, end, chunkSize, uploadedFiles, progressBar); // Pass progressBar to uploadChunk\n                    });\n                } else {\n                    var reader = new FileReader();\n                    reader.onload = (function(file, index) {\n                        return function(e) {\n                            var img = document.createElement('img');\n                            img.src = e.target.result;\n                            img.classList.add('img-fluid', 'iq-uploaded-image');\n                            img.style.width = '150px'; // Adjust size as needed\n                            img.style.height = '100px';\n\n                            // Create progress bar\n                            var progressBar = document.createElement('div');\n                            progressBar.classList.add('progress', 'my-3', 'iq-progress');\n                            progressBar.style.visibility = 'hidden'; // Change visibility to hidden initially\n                            progressBar.innerHTML = `\n                                <div class=\"progress-bar\" role=\"progressbar\" style=\"width: 0%;\" aria-valuenow=\"0\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                            `;\n\n                            // Create close icon\n                            var closeButton = document.createElement('div');\n                            closeButton.classList.add('iq-uploaded-image-close');\n                            closeButton.innerHTML = '&times;';\n                            closeButton.addEventListener('click', function() {\n                                uploadedFiles[index].removed = true; // Mark file as removed\n                                this.parentNode.remove(); // Remove image on close icon click\n                                checkAndClearFileInput();\n                            });\n\n                            // Append image, progress bar, and close icon\n                            var imageContainer = document.createElement('div');\n                            imageContainer.classList.add('iq-uploaded-image-container');\n                            imageContainer.appendChild(img);\n                            imageContainer.appendChild(progressBar);\n                            imageContainer.appendChild(closeButton);\n                            uploadedImagesContainer.appendChild(imageContainer);\n\n                            // Track the uploaded file\n                            uploadedFiles.push({ file: file, removed: false, progressBar: progressBar.querySelector('.progress-bar') });\n\n                            uploadChunk(file, index, start, end, chunkSize, uploadedFiles, progressBar); // Pass progressBar to uploadChunk\n                        };\n                    })(file, i);\n\n                    reader.readAsDataURL(file);\n                }\n            }\n        }\n\n        // Track the uploaded files globally\n        window.uploadedFiles = uploadedFiles;\n        function checkAndClearFileInput() {\n            // If all files are removed\n            if (uploadedFiles.every(file => file.removed)) {\n                fileInput.value = null; // Clear the file input\n                uploadedFiles.length = 0; // Clear the uploadedFiles array\n                document.getElementById('file_url_media').setAttribute('required', 'required');\n                document.getElementById('file_url_media-error').style.display = 'block';\n            }\n        }\n    });\n  }\n\n  function uploadChunk(file, index, start, end, chunkSize, uploadedFiles, progressBar) { // Added progressBar parameter\n    var chunk = file.slice(start, end);\n    var formData = new FormData();\n    formData.append('file_chunk', chunk);\n    formData.append('index', index);\n    formData.append('total_chunks', Math.ceil(file.size / chunkSize));\n    formData.append('file_name', file.name);\n\n    // AJAX request to upload chunk\n    var xhr = new XMLHttpRequest();\n\n    // Track upload progress\n    xhr.upload.addEventListener('progress', function(e) {\n        if (e.lengthComputable) {\n            var percentComplete = (e.loaded / e.total) * 100;\n            uploadedFiles[index].progressBar.style.width = percentComplete + '%';\n            progressBar.style.visibility = 'visible'; // Make progress bar visible during upload\n        }\n    });\n\n    xhr.open('POST', `${baseUrl}/app/media-library/upload`, true);\n    xhr.setRequestHeader('X-CSRF-TOKEN', document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content')); // Set CSRF token header\n\n    xhr.onload = function() {\n        if (xhr.status === 200) {\n            var response = JSON.parse(xhr.responseText);\n            if (response.success) {\n                if (end < file.size) {\n                    start = end;\n                    end = Math.min(start + chunkSize, file.size);\n                    uploadChunk(file, index, start, end, chunkSize, uploadedFiles, progressBar); // Pass progressBar to uploadChunk\n                } else {\n                    uploadedFiles[index].progressBar.style.width = '100%';\n                    progressBar.style.visibility = 'hidden'; // Hide progress bar after completion\n                }\n            }\n        }\n    };\n\n    xhr.send(formData);\n  }\n\n/////////////////////////////////////////  set image /////////////////////////////////////////\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    // const mediaContainer = document.getElementById('media-container');\n    const loadingSpinner = document.getElementById('loading-spinner');\n    const mediaLibraryContent = document.getElementById('mediaLibraryContent');\n    const searchInput = document.getElementById('media-search');\n    const noData = document.getElementById('no_data');\n    let page = 1;\n    let isLoading = false;\n    let hasMore = true;\n    let searchQuery = ''; // Variable to store the search query\n    let issearch=0; // Variable to hold the debounce timeout ID\n    const baseUrl = document.querySelector('meta[name=\"base-url\"]').getAttribute('content'); // Adjust if necessary\n    let noAvailableMessageShown = false; // Flag to prevent multiple \"No Available\" messages\n\n    function loadImages(query = '') {\n\n\n      if (isLoading || (!hasMore  &&  query == '' && issearch==0) ) return;\n\n        isLoading = true;\n        loadingSpinner.style.display = 'block';\n\n        fetch(`${baseUrl}/app/media-library/getMediaStore?page=${page}&query=${encodeURIComponent(query)}`)\n            .then(response => {\n\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                return response.json();\n            })\n            .then(data => {\n\n               // clearNoAvailableMessage();\n\n                if (data.html) {\n\n                    noData.classList.add('d-none');\n                    if(issearch==1){\n                      mediaContainer.innerHTML = '';\n                    }\n\n                    mediaContainer.insertAdjacentHTML('beforeend', data.html);\n                    page++;\n                    noAvailableMessageShown = false; // Reset flag if new images are loaded\n\n                    issearch.value=0;\n\n\n                } else {\n\n                    issearch.value=0;\n                    mediaContainer.innerHTML = '';\n                    noData.classList.remove('d-none');\n\n                    $('#no_data').text('No data available');\n                }\n\n                hasMore = data.hasMore;\n            })\n            .catch(error => {\n                console.error('Error loading images:', error);\n            })\n            .finally(() => {\n                isLoading = false;\n                loadingSpinner.style.display = 'none';\n            });\n    }\n\n    function onScroll() {\n\n        if (mediaLibraryContent.scrollTop + mediaLibraryContent.clientHeight >= mediaLibraryContent.scrollHeight - 100) {\n            loadImages(searchQuery);\n        }\n    }\n\n    function handleSearchInput() {\n        searchQuery = searchInput.value;\n\n        page = 1;\n        mediaContainer.innerHTML = '';\n\n      loadImages(searchQuery);\n\n    }\n    if(searchInput){\n      searchInput.addEventListener('input', function() {\n        issearch.value=1;\n        handleSearchInput()\n    });\n\n    }\n\n    const clearSearchButton = document.getElementById('clear-search');\n\n    function toggleClearButtonVisibility() {\n        if (searchInput) {\n        if (searchInput.value.length > 0) {\n            clearSearchButton.classList.remove('d-none'); // Show the button\n        } else {\n            clearSearchButton.classList.add('d-none'); // Hide the button\n        }\n        }\n    }\n    if (searchInput) {\n    // Add event listener for input changes\n    searchInput.addEventListener('input', toggleClearButtonVisibility);\n    }\n    // Add event listener for clear button\n    if (clearSearchButton) {\n    clearSearchButton.addEventListener('click', function() {\n        searchInput.value = ''; // Clear the input field\n        toggleClearButtonVisibility(); // Update button visibility\n        page = 1; // Reset page number\n        searchQuery = ''; // Reset search query\n        isLoading = false;\n        hasMore = true;\n        issearch.value=0;\n        mediaContainer.innerHTML = '';\n       loadImages(searchQuery);\n    });\n    }\n    // Initialize the visibility on page load\n    toggleClearButtonVisibility();\n\n\n    if(exampleModal){\n\n        exampleModal.addEventListener('shown.bs.modal', function () {\n            if (mediaContainer.children.length === 0) {\n                loadImages(searchQuery); // Load images based on the search query if present\n            }\n            mediaLibraryContent.addEventListener('scroll', onScroll);\n        });\n\n        exampleModal.addEventListener('hidden.bs.modal', function () {\n            mediaLibraryContent.removeEventListener('scroll', onScroll);\n        });\n\n        if (mediaContainer.children.length === 0) {\n            loadImages(searchQuery);\n        }\n\n    }\n\n});\n\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  const uploadButton = document.getElementById('nav-upload-files-tab');\n  const libraryButton = document.getElementById('nav-media-library-tab');\n  const searchContainer = document.getElementById('media-search-container');\n\n  if(libraryButton){\n\n  // Function to toggle the search container visibility\n  function toggleSearchVisibility() {\n\n      if (libraryButton.classList.contains('active')) {\n        if(searchContainer){\n          searchContainer.style.display = 'block';\n         }\n      } else {\n        if(searchContainer){\n\n          searchContainer.style.display = 'none';\n\n        }\n\n      }\n\n\n    }\n\n  // Initial toggle based on the active tab\n  toggleSearchVisibility();\n\n  // Add event listeners to toggle the visibility on tab change\n  uploadButton.addEventListener('click', toggleSearchVisibility);\n  libraryButton.addEventListener('click', toggleSearchVisibility);\n\n}\n});\n\n\n\n\n\n\n"],"names":["baseUrl","document","querySelector","getAttribute","exampleModal","getElementById","mediaContainer","uploadChunk","file","index","start","end","chunkSize","uploadedFiles","progressBar","chunk","slice","formData","FormData","append","Math","ceil","size","name","xhr","XMLHttpRequest","upload","addEventListener","e","lengthComputable","percentComplete","loaded","total","style","width","visibility","open","concat","setRequestHeader","onload","status","JSON","parse","responseText","success","min","send","selectedMediaUrl","currentImageContainer","currentHiddenInput","videoInputCounter","initializeModal","querySelectorAll","forEach","button","this","initializeImageSelection","selectMedia","mediaUrl","mediaElement","media","classList","remove","add","event","target","tagName","src","preventDefault","selectedImageContainer","mediaUrlInput","value","innerHTML","hasAttribute","fileError","videofile","vfi","endsWith","display","removeAttribute","video","createElement","controls","maxWidth","maxHeight","appendChild","crossIcon","cursor","fontSize","position","setAttribute","errorElement","textContent","img","buttonElement","$","modal","submitButton","disabled","window","remainingFiles","filter","removed","length","i","onloadstart","innerText","click","page","loadPaginatedImages","mediaLibraryContent","handleScroll","onloadend","location","href","reload","isLoading","hasMore","fetch","then","response","json","data","html","insertAdjacentHTML","console","log","error","scrollTop","clientHeight","scrollHeight","handleVideoQualityTypeChange","section","find","on","selectedType","val","QualityVideoFileInput","QualityVideoURLInput","qualityVideoInput","qualityVideoURLInput","removeClass","addClass","trigger","initializeSelect2","each","select2","removeEventListener","originalSection","first","newSection","clone","idAttr","attr","nameAttr","dataAttr","closest","fileInput","uploadedImagesContainer","files","type","startsWith","URL","createObjectURL","currentTime","canvas","videoWidth","height","videoHeight","getContext","drawImage","toDataURL","closeButton","parentNode","checkAndClearFileInput","imageContainer","push","reader","FileReader","result","readAsDataURL","every","loadingSpinner","searchInput","noData","searchQuery","loadImages","query","arguments","undefined","encodeURIComponent","ok","Error","text","onScroll","clearSearchButton","toggleClearButtonVisibility","children","uploadButton","libraryButton","searchContainer","toggleSearchVisibility","contains"],"sourceRoot":""}