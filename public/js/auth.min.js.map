{"version":3,"file":"/js/auth.min.js","mappings":"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","sources":["webpack:///./Modules/Frontend/Resources/assets/js/auth.js"],"sourcesContent":["const togglePassword = document.querySelector('#togglePassword');\nconst password = document.querySelector('#password');\ntogglePassword.addEventListener('click', function () {\n  const type = password.getAttribute('type') === 'password' ? 'text' : 'password';\n  password.setAttribute('type', type);\n  this.classList.toggle('fa-eye-slash');\n});\n\nconst toggleConfirmPassword = document.querySelector('#toggleConfirmPassword');\nconst confirm_password = document.querySelector('#confirm_password');\nif (toggleConfirmPassword) {\n\n  toggleConfirmPassword.addEventListener('click', function () {\n    const type_confirm = confirm_password.getAttribute('type') === 'password' ? 'text' : 'password';\n    confirm_password.setAttribute('type', type_confirm);\n    this.classList.toggle('fa-eye-slash');\n  });\n\n}\n\nconst registerForm = document.querySelector('#registerForm');\nconst registerButton = document.querySelector('#register-button');\nconst errorMessage = document.querySelector('#error_message');\n\nconst baseUrl = document.querySelector('meta[name=\"base-url\"]').getAttribute('content');\n\n\n\nif (registerForm) {\n  registerForm.addEventListener('submit', async function (e) {\n    e.preventDefault();\n    const isValid = validateRegisterForm(); // Manually validate the form\n    if (!isValid) {\n      return;\n    }\n    toggleRegisterButton(true, registerButton);\n    errorMessage.textContent = '';\n\n    try {\n      const formData = new FormData(this);\n      const response = await fetch(`${baseUrl}/api/register?is_ajax=1` , {\n        method: 'POST',\n        headers: {\n          'X-CSRF-TOKEN': document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content')\n        },\n        body: formData\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        handleValidationErrors(data.errors);\n      }\n\n      if (data.status==true) {\n\n\n        try {\n          const formData = new FormData(this);\n          const response = await fetch(`${baseUrl}/api/login?is_ajax=1`, {\n            method: 'POST',\n            headers: {\n              'X-CSRF-TOKEN': document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content')\n            },\n            body: formData\n          });\n\n          const data = await response.json();\n\n          if (data.status == true) {\n            window.location.href = `${baseUrl}`;\n          }\n        } catch (error) {\n          if (error.message !== 'Validation Error') {\n          }\n        }\n\n      } else {\n        errorMessage.textContent = data.message;\n      }\n    } catch (error) {\n      errorMessage.textContent = 'An error occurred. Please try again later.';\n    } finally {\n      toggleRegisterButton(false, registerButton);\n    }\n  });\n}\n\nfunction toggleRegisterButton(isSubmitting, button) {\n  const registrationText = button.getAttribute('data-login-text') || 'Sign Up';\n  button.textContent = isSubmitting ? 'Sign Up...' : registrationText;\n  button.disabled = isSubmitting;\n}\n\nfunction validateRegisterForm() {\n  let isValid = true;\n\n  const firstName = registerForm.querySelector('input[name=\"first_name\"]');\n  const lastName = registerForm.querySelector('input[name=\"last_name\"]');\n  const email = registerForm.querySelector('input[name=\"email\"]');\n  const password = registerForm.querySelector('input[name=\"password\"]');\n  const confirmPassword = registerForm.querySelector('input[name=\"confirm_password\"]');\n\n\n  if (!firstName.value.trim()) {\n    showValidationError(firstName, 'First Name field is required.');\n    isValid = false;\n  } else {\n    clearValidationError(firstName);\n  }\n\n  if (!lastName.value.trim()) {\n    showValidationError(lastName, 'Last Name field is required.');\n    isValid = false;\n  } else {\n    clearValidationError(lastName);\n  }\n\n  if (email && email.required) {\n    if (email.value.trim() === '') {\n      showValidationError(email, 'Email field is required.');\n      isValid = false;\n    } else if (!validateEmail(email.value)) {\n      showValidationError(email, 'Enter a valid Email Address.');\n      isValid = false;\n    } else {\n      clearValidationError(email);\n    }\n  }\n\n  if (!password.value.trim()) {\n\n    showValidationError(password, 'Password field is required.');\n    isValid = false;\n  } else if (password.value.length < 6) {\n\n    showValidationError(password, 'Password must be at least 6 characters long.');\n    isValid = false;\n  } else {\n    clearValidationError(password);\n  }\n\n  if (password.value.length > 6 && password.value !== confirmPassword.value) {\n    showValidationError(confirmPassword, 'Passwords and confirm password do not match.');\n    isValid = false;\n  } else {\n    clearValidationError(confirmPassword);\n  }\n\n  return isValid;\n}\n\n\nconst loginForm = document.querySelector('#login-form');\n\nif (loginForm) {\n  const loginButton = document.querySelector('#login-button');\n  const loginError = document.querySelector('#login_error_message');\n\n  loginForm.addEventListener('submit', async function (e) {\n    e.preventDefault();\n    const isValid = validateloginForm(); // Manually validate the form\n    if (!isValid) {\n      return;\n    }\n    toggleLoginButton(true, loginButton);\n    loginError.textContent = '';\n\n    try {\n      const formData = new FormData(this);\n      const response = await fetch(`${baseUrl}/api/login?is_ajax=1`, {\n        method: 'POST',\n        headers: {\n          'X-CSRF-TOKEN': document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content')\n        },\n        body: formData\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        handleValidationErrors(data.errors);\n      }\n      if (data.status == true) {\n        window.location.href = `${baseUrl}`;\n      } else {\n\n        loginError.textContent = data.message\n\n\n      }\n    } catch (error) {\n      if (error.message !== 'Validation Error') {\n      }\n    } finally {\n      toggleLoginButton(false, loginButton);\n    }\n  });\n\n  function validateloginForm() {\n    let isValid = true;\n    const emailField = loginForm.querySelector('input[name=\"email\"]');\n    const passwordField = loginForm.querySelector('input[name=\"password\"]');\n\n    if (emailField && emailField.required) {\n      if (emailField.value.trim() === '') {\n        showValidationError(emailField, 'Email field is required.');\n        isValid = false;\n      } else if (!validateEmail(emailField.value)) {\n        showValidationError(emailField, 'Enter a valid Email Address.');\n        isValid = false;\n      } else {\n        clearValidationError(emailField);\n      }\n    }\n\n    if (passwordField && passwordField.value.trim() === '') {\n      passwordField.classList.add('is-invalid');\n      isValid = false;\n    } else {\n      passwordField.classList.remove('is-invalid');\n    }\n\n    return isValid;\n  }\n\n\n  function toggleLoginButton(isSubmitting, button) {\n    const loginText = button.getAttribute('data-login-text') || 'Login';\n    button.textContent = isSubmitting ? 'Sign In...' : loginText;\n    button.disabled = isSubmitting;\n  }\n\n}\n\nfunction validateEmail(email) {\n  const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return re.test(email);\n}\n\n\nfunction showValidationError(input, message) {\n  const container = input.closest('.input-group');\n  const errorFeedback = container.querySelector('.invalid-feedback');\n\n  if (errorFeedback) {\n    errorFeedback.textContent = message;\n    input.classList.add('is-invalid');\n  }\n}\n\nfunction clearValidationError(input) {\n\n  const container = input.closest('.input-group');\n  const errorFeedback = container.querySelector('.invalid-feedback');\n\n  if (errorFeedback) {\n    errorFeedback.textContent = '';\n    input.classList.remove('is-invalid');\n  }\n}\n\n\n\n\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","togglePassword","document","querySelector","password","addEventListener","getAttribute","setAttribute","this","classList","toggle","toggleConfirmPassword","confirm_password","type_confirm","registerForm","registerButton","errorMessage","baseUrl","toggleRegisterButton","isSubmitting","button","registrationText","textContent","disabled","validateRegisterForm","isValid","firstName","lastName","email","confirmPassword","trim","clearValidationError","showValidationError","required","validateEmail","_ref","_callee","formData","response","data","_formData","_response","_context","preventDefault","FormData","fetch","concat","headers","body","json","ok","handleValidationErrors","errors","status","window","location","href","t0","message","t1","_x","loginForm","validateloginForm","emailField","passwordField","add","remove","toggleLoginButton","loginText","loginButton","loginError","_ref2","_callee2","_context2","_x2","test","input","errorFeedback","closest"],"sourceRoot":""}